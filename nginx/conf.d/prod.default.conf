upstream backend_service {
    server backend:3000;
}

server {
    listen 80;
    server_name _; # TODO - Set Domain Name

    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl;
    http2 on;
    server_name _; # TODO - Set Domain Name

    # TODO - Set up Real SSL Certificates
    ssl_certificate /etc/nginx/ssl/nginx-selfsigned.crt;
    ssl_certificate_key /etc/nginx/ssl/nginx-selfsigned.key;

    access_log /var/log/nginx/prod.access.log main;
    error_log /var/log/nginx/prod.error.log warn;

    # TODO - Add security headers
    # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    # add_header X-Frame-Options "SAMEORIGIN" always;
    # add_header X-Content-Type-Options "nosniff" always;
    # add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    # add_header Content-Security-Policy "default-src 'self'; script-src 'self'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; connect-src 'self' wss://$host";

    location /api/ {
        proxy_pass http://backend_service;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    location / {
        root /usr/share/nginx/html;
        index index.html;
        try_files $uri $uri/ /index.html;
        location ~* \.(?:css|js|jpg|jpeg|gif|png|ico|svg)$ {
            expires 7d;
            add_header Pragma public;
            add_header Cache-Control "public";
        }
    }
}
